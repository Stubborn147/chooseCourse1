<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       https://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--配置文件转到MobilePhone类中，包扫描标签标识 base-package基础包，
    可以添加多个基础包用逗号分隔-->
    <!--    <context:component-scan base-package="com.spring.entity"></context:component-scan>-->

    <!--添加mvc分层之后，spring扫描的包是Service层(biz)  调用实现的方法-->
    <context:component-scan base-package="com.example"></context:component-scan>

    <!--mybatis配置文件中添加哪些配置?2个是必须的：environments数据源，mappers映射配置文件，在Spring配置文件中整合
    Spring整合MyBatis  通过bean标签来体现  来添加MyBatis的配置
    其他配置：别名、setting等，加载mybatis配置，其他配置写成mybatis配置文件中，所以需要在Spring配置中加载mybatis配置
    加载配置文件  添加SqlSessionFactory配置，SqlSession 接口方法-->

    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=utf-8</value>
                        <value>text/json;charset=utf-8</value>
                        <value>text/html;charset=utf-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--加载db.properties文件-->
    <bean id="db" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
        <!--报错：类路径下-->
        <property name="location" value="classpath:db.properties"></property>
    </bean>
    <!--Spring中整合数据源，使用Spring中的JDBC模块 （需要引入Spring-JDBC的依赖）-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <!--给属性赋值:属性注入-->
        <property name="driverClassName" value="${db.driver}"></property>  <!--属性文件中加的标识db,避免冲突-->
        <property name="url" value="${db.url}"></property>
        <property name="username" value="${db.username}"></property>
        <property name="password" value="${db.password}"></property>
    </bean>

    <!--mappers映射配置文件 用接口来体现:添加对应的接口   Mapping扫描的配置  Value：接口的包名-->
    <bean id="mapping" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.example.mapping"></property>
    </bean>

    <!--添加SqlSessionFactory配置-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--引用数据源  用ref去引用创建好的数据源-->
        <property name="dataSource" ref="dataSource"></property>
        <!--mappers映射配置文件    classpath类路径:java和resources是类路径-->
        <property name="mapperLocations" value="classpath:mapping/*.xml"></property>
        <!--MyBatis配置文件引用路径-->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
    </bean>

    <!--视图解析 ViewTemplate-->
<!--    <bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">-->
<!--        &lt;!&ndash;jstl标签库：引入依赖 jstl和standard-->
<!--        返回结果的形式，前缀  后缀&ndash;&gt;-->
<!--        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>-->
<!--        <property name="prefix" value="/views/"></property>-->
<!--        <property name="suffix" value=".jsp"></property>-->
<!--    </bean>-->

    <!-- 配置freeMarker视图解析器 -->
        <bean id="viewResolverFtl" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
            <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
            <property name="contentType" value="text/html; charset=utf-8"/>
            <property name="cache" value="false"/>
            <property name="suffix" value=".ftl"/>
            <property name="order" value="0"/>
            <property name="requestContextAttribute" value="request"/>
        </bean>

        <!-- freemarker的配置 -->
        <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
            <property name="templateLoaderPath" value="/"></property><!--解析路径-->
            <property name="freemarkerSettings"><!-- 设置FreeMarker环境属性 -->
                <props>
                    <prop key="template_update_delay">5</prop><!--刷新模板的周期，单位为秒 -->
                    <prop key="default_encoding">UTF-8</prop><!--模板的编码格式 -->
                    <prop key="locale">UTF-8</prop><!-- 本地化设置 -->
                    <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                    <prop key="time_format">HH:mm:ss</prop>
                    <prop key="number_format">0.####</prop>
                    <prop key="boolean_format">true,false</prop>
                    <prop key="whitespace_stripping">true</prop>
                    <prop key="tag_syntax">auto_detect</prop>
                    <prop key="url_escaping_charset">UTF-8</prop>
                </props>
            </property>
        </bean>
</beans>