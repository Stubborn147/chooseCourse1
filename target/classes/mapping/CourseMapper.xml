<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapping.CourseMapper">
  <resultMap id="BaseResultMap" type="com.example.entity.Course">
    <id column="course_id" jdbcType="VARCHAR" property="courseId" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="course_introduce" jdbcType="VARCHAR" property="courseIntroduce" />
    <result column="course_time" jdbcType="TIMESTAMP" property="courseTime" />
    <result column="course_tid" jdbcType="VARCHAR" property="courseTid" />
    <result column="max_num" jdbcType="INTEGER" property="maxNum" />
    <result column="credit" jdbcType="VARCHAR" property="credit" />
    <result column="period" jdbcType="VARCHAR" property="period" />
    <result column="choose_time" jdbcType="TIMESTAMP" property="chooseTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    course_id, course_name, course_introduce, course_time, course_tid, max_num, credit, 
    period, choose_time
  </sql>
  <select id="selectByExample" parameterType="com.example.entity.CourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course
    where course_id = #{courseId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from course
    where course_id = #{courseId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.entity.CourseExample">
    delete from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.entity.Course">
    insert into course (course_id, course_name, course_introduce, 
      course_time, course_tid, max_num, 
      credit, period, choose_time
      )
    values (#{courseId,jdbcType=VARCHAR}, #{courseName,jdbcType=VARCHAR}, #{courseIntroduce,jdbcType=VARCHAR}, 
      #{courseTime,jdbcType=TIMESTAMP}, #{courseTid,jdbcType=VARCHAR}, #{maxNum,jdbcType=INTEGER}, 
      #{credit,jdbcType=VARCHAR}, #{period,jdbcType=VARCHAR}, #{chooseTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.entity.Course">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="courseId != null">
        course_id,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
      <if test="courseIntroduce != null">
        course_introduce,
      </if>
      <if test="courseTime != null">
        course_time,
      </if>
      <if test="courseTid != null">
        course_tid,
      </if>
      <if test="maxNum != null">
        max_num,
      </if>
      <if test="credit != null">
        credit,
      </if>
      <if test="period != null">
        period,
      </if>
      <if test="chooseTime != null">
        choose_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="courseId != null">
        #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseIntroduce != null">
        #{courseIntroduce,jdbcType=VARCHAR},
      </if>
      <if test="courseTime != null">
        #{courseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="courseTid != null">
        #{courseTid,jdbcType=VARCHAR},
      </if>
      <if test="maxNum != null">
        #{maxNum,jdbcType=INTEGER},
      </if>
      <if test="credit != null">
        #{credit,jdbcType=VARCHAR},
      </if>
      <if test="period != null">
        #{period,jdbcType=VARCHAR},
      </if>
      <if test="chooseTime != null">
        #{chooseTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.entity.CourseExample" resultType="java.lang.Long">
    select count(*) from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course
    <set>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=VARCHAR},
      </if>
      <if test="record.courseName != null">
        course_name = #{record.courseName,jdbcType=VARCHAR},
      </if>
      <if test="record.courseIntroduce != null">
        course_introduce = #{record.courseIntroduce,jdbcType=VARCHAR},
      </if>
      <if test="record.courseTime != null">
        course_time = #{record.courseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.courseTid != null">
        course_tid = #{record.courseTid,jdbcType=VARCHAR},
      </if>
      <if test="record.maxNum != null">
        max_num = #{record.maxNum,jdbcType=INTEGER},
      </if>
      <if test="record.credit != null">
        credit = #{record.credit,jdbcType=VARCHAR},
      </if>
      <if test="record.period != null">
        period = #{record.period,jdbcType=VARCHAR},
      </if>
      <if test="record.chooseTime != null">
        choose_time = #{record.chooseTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course
    set course_id = #{record.courseId,jdbcType=VARCHAR},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      course_introduce = #{record.courseIntroduce,jdbcType=VARCHAR},
      course_time = #{record.courseTime,jdbcType=TIMESTAMP},
      course_tid = #{record.courseTid,jdbcType=VARCHAR},
      max_num = #{record.maxNum,jdbcType=INTEGER},
      credit = #{record.credit,jdbcType=VARCHAR},
      period = #{record.period,jdbcType=VARCHAR},
      choose_time = #{record.chooseTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.entity.Course">
    update course
    <set>
      <if test="courseName != null">
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseIntroduce != null">
        course_introduce = #{courseIntroduce,jdbcType=VARCHAR},
      </if>
      <if test="courseTime != null">
        course_time = #{courseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="courseTid != null">
        course_tid = #{courseTid,jdbcType=VARCHAR},
      </if>
      <if test="maxNum != null">
        max_num = #{maxNum,jdbcType=INTEGER},
      </if>
      <if test="credit != null">
        credit = #{credit,jdbcType=VARCHAR},
      </if>
      <if test="period != null">
        period = #{period,jdbcType=VARCHAR},
      </if>
      <if test="chooseTime != null">
        choose_time = #{chooseTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where course_id = #{courseId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.entity.Course">
    update course
    set course_name = #{courseName,jdbcType=VARCHAR},
      course_introduce = #{courseIntroduce,jdbcType=VARCHAR},
      course_time = #{courseTime,jdbcType=TIMESTAMP},
      course_tid = #{courseTid,jdbcType=VARCHAR},
      max_num = #{maxNum,jdbcType=INTEGER},
      credit = #{credit,jdbcType=VARCHAR},
      period = #{period,jdbcType=VARCHAR},
      choose_time = #{chooseTime,jdbcType=TIMESTAMP}
    where course_id = #{courseId,jdbcType=VARCHAR}
  </update>
</mapper>